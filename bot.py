import telebot
import requests
import socket

bot = telebot.TeleBot('7319849696:AAHtI6CGloOVzNZS3S2-P6HX0G3SZRpPh6U')

def get_random_vnc_info():
    response = requests.get('https://computernewb.com/vncresolver/api/scans/vnc/random')
    if response.status_code == 200:
        return response.json()
    else:
        return None

def is_port_open(ip, port):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.settimeout(1)
    result = sock.connect_ex((ip, port))
    sock.close()
    return result == 0

def send_message_with_retry(chat_id, text):
    while True:
        try:
            bot.send_message(chat_id, text)
            break
        except Exception as e:
            print(f"Error sending message: {e}. Retrying...")

@bot.message_handler(commands=['vnc'])
def handle_vnc(message):
    vnc_info = None
    while True:
        vnc_info = get_random_vnc_info()
        if vnc_info and is_port_open(vnc_info['ip'], vnc_info['port']):
            break

    if vnc_info:
        reply = (
            f"\n\nN·∫øu kh√¥ng th·ªÉ k·∫øt n·ªëi, vui l√≤ng nh·∫≠p /vnc ƒë·ªÉ l·∫•y IP m·ªõiü•∞ü•∞\n"
            f"\nTelegram: @oatdonemdume\n"
            f"\n"
            f"\nIP: {vnc_info['ip']}:{vnc_info['port']}\n"
            f"Th√†nh ph·ªë: {vnc_info['city']}\n"
            f"T·ªânh/Bang: {vnc_info['state']}\n"
            f"Qu·ªëc gia: {vnc_info['country']}\n"
            f"T√™n m√°y ch·ªß: {vnc_info['clientname']}\n"
            f"ƒê·ªô ph√¢n gi·∫£i m√†n h√¨nh: {vnc_info['screenres']}\n"
            f"T√™n Host: {vnc_info['hostname']}\n"
            f"H·ªá ƒëi·ªÅu h√†nh: {vnc_info['osname']}\n"
            f"C√°c Port ƒëang m·ªü: {vnc_info['openports']}\n"
            f"T√™n ng∆∞·ªùi d√πng: {vnc_info['username']}\n"
            f"M·∫≠t kh·∫©u: {vnc_info['password']}\n"
        )
    else:
        reply = "\nKh√¥ng th·ªÉ l·∫•y th√¥ng tin VNC t·ª´ API, c√≥ l·∫Ω API ƒë√£ h·∫øt h·∫°n ho·∫∑c c√≥ m·ªôt v·ª• t·∫•n c√¥ng n√†o ƒë√≥ ƒë√£ x·∫£y ra."

    send_message_with_retry(message.chat.id, reply)

bot.polling()